{"version":3,"sources":["logo.svg","QuizOptions.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["QuizOptions","props","state","callParentCheckResult","bind","this","checkResult","option","className","onClick","Component","Quiz","riddle","playGame","renderOptions","play","min","max","Math","floor","random","sum","resultsArray","randomNumberArray","length","randomNumber","indexOf","push","i","result","field1","field2","generateRandomOptions","sort","a","b","answer","console","log","gameOver","setState","correct","map","classNames","renderMessage","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d71c1b91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\n\nclass QuizOptions extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {};\n    this.callParentCheckResult =this.callParentCheckResult.bind(this);\n  }\n\n  callParentCheckResult(){\n    this.props.checkResult(this.props.option);\n  }\n  render(){\n    return (\n      <div className='fields animate__animated animate__zoomIn' onClick = {this.callParentCheckResult}>\n      <div className='field-block'>{this.props.option}</div> </div>\n    );\n  }\n}\n\nexport default QuizOptions;\n","import React, {Component} from 'react';\nimport QuizOptions from './QuizOptions';\nimport classNames from 'classnames/bind';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    let riddle = this.playGame();\n    let correct = false;\n    let gameOver = false;\n\n    this.state = {riddle};\n    this.renderOptions = this.renderOptions.bind(this);\n    this.checkResult = this.checkResult.bind(this);\n    this.play = this.play.bind(this);\n  }\n   randomNumber(min, max){\n     return Math.floor(Math.random() * (max-min+1))+min;\n   }\n   //To generate Random options\n   generateRandomOptions(sum){\n     let result = sum;\n     let resultsArray = [];\n     let randomNumberArray = [];\n     while(randomNumberArray.length <= 3){\n       let randomNumber = this.randomNumber(1,19);\n       if(randomNumberArray.indexOf(randomNumber)>-1) continue;\n       randomNumberArray.push(randomNumber);\n     }\n\n     //check for 3 numbers\n     for(let i=0;i<3;i++){\n       let addSubtract = this.randomNumber(0,1);\n       let result = sum;\n       if(addSubtract === 1){\n         //add the number to the result\n         result += randomNumberArray[i]\n         resultsArray.push(result)\n       } else {\n         //Subtract the number from result\n         result -= randomNumberArray[i]\n         resultsArray.push(result)\n       }\n     }\n      return resultsArray;\n   }\n\n  playGame(){\n\n    let field1 = this.randomNumber(20,40);\n    let field2 = this.randomNumber(20,40);\n    let result = field1+field2;\n    let resultsArray = this.generateRandomOptions(result);\n    resultsArray.push(result)\n    resultsArray.sort(function(a,b) {return 0.5-Math.random() })\n    let riddle = {\n      resultsArray : resultsArray,\n      field1 : field1,\n      field2 : field2,\n      answer : result\n    };\n    console.log(riddle);\n    if(this.state && this.state.gameOver){\n      this.setState({riddle:riddle});\n    }else{\n      return riddle;\n    }\n\n    return riddle;\n  }\n  checkResult(option){\n    if(this.state.riddle.answer === option){\n        console.log(\"correct \");\n        this.setState({correct: true,gameOver:true})\n      }else {\n        console.log(\"Wrong \");\n        this.setState({correct: false,gameOver:false})\n      }\n  }\n  renderOptions(){\n    return(\n    <div className='options'>\n    {this.state.riddle.resultsArray.map((option, i) =>\n      <QuizOptions option= {option} key={i} checkResult={this.checkResult}/>\n    )}\n\n    </div>\n  );\n  }\n\n  renderMessage(){\n    if(this.state.correct){\n      return <h3>Good Job...Press the Play Again Button to play</h3>\n    }else{\n      return <h3>opss...Press the Play Again Button to play</h3>\n    }\n  }\n play(){\n   this.setState({correct:false,gameOver:false})\n   this.playGame();\n }\n  render(){\n    return(\n      <div className='quiz'>\n        <div className='quiz-content'>\n          <p className='question'>What is the sum of <span className='text-info'>{this.state.riddle.field1}</span>and <span className='text-info'>{this.state.riddle.field2}</span>?</p>\n        </div>\n        {this.renderOptions()}\n        <div className={classNames('after', {'hide': !this.state.gameOver}, {'wrong animate__animated animate__zoomInDown': !this.state.correct}, {'correct animate__animated animate__zoomInDown': this.state.correct})}>\n          {this.renderMessage()}\n        </div>\n        <div className= \"play-again\">\n          <a className= \"button\" onClick={this.play} >Play again</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n","import logo from './logo.svg';\nimport './App.css';\nimport Quiz from './Quiz';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <Quiz/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}